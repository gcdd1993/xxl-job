import java.text.SimpleDateFormat

plugins {
    id "org.springframework.boot" version "2.7.1" apply false
    id "com.gorylenko.gradle-git-properties" version "1.5.2"
}

def javaVersion = System.getProperty("java.version")
if (!javaVersion.startsWith("11")) {
    throw new RuntimeException("Incompatible JRE version: " + javaVersion + ". Use JRE 11 instead.")
}

subprojects { project ->
    group = 'com.xuxueli'
    version = '2.4.0-SNAPSHOT'

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    jar {
        enabled = true
        manifest {
            attributes(
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.version,
                    "Built-By": System.properties["user.name"],
                    "Build-Timestamp": new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                    "Created-By": "Gradle ${gradle.gradleVersion}",
                    "Build-Jdk": "${System.properties["java.version"]} (${System.properties["java.vendor"]} ${System.properties["java.vm.version"]})",
                    "Build-OS": "${System.properties["os.name"]} ${System.properties["os.arch"]} ${System.properties["os.version"]}"
            )
        }
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = "UTF-8"
        }
    }

    dependencies {
        compileOnly("org.projectlombok:lombok:$lombok_version")
        annotationProcessor("org.projectlombok:lombok:$lombok_version")
        implementation 'javax.annotation:javax.annotation-api:1.3.2'

        testImplementation("org.springframework.boot:spring-boot-starter-test")
        testImplementation("org.projectlombok:lombok:$lombok_version")
        testAnnotationProcessor("org.projectlombok:lombok:$lombok_version")
    }

    test {
        useJUnitPlatform()
    }

    repositories {
        mavenLocal()
        maven { url = uri("https://maven.aliyun.com/repository/central") } // central
        maven { url = uri("https://maven.aliyun.com/repository/public") } // jcenter & public
        maven { url = uri("https://maven.aliyun.com/repository/google") } // google
        maven { url = uri("https://maven.aliyun.com/repository/spring") } // spring
        maven { url = uri("https://maven.aliyun.com/repository/spring-plugin") } // spring plugin
        maven { url = uri("https://maven.aliyun.com/repository/grails-core") } // spring plugin
    }

}